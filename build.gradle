buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath files('libs/gradle-witness.jar')
        classpath 'com.android.tools.build:gradle:2.1.2'
    }
}

plugins {
    // Publishing on bintray
    id 'maven'
    id 'maven-publish'
    id 'com.jfrog.bintray' version '1.7'
}

apply plugin: 'witness'
apply plugin: 'com.android.library'

// Android configuration
android {
    compileSdkVersion 23
    buildToolsVersion "23.0.3"

    defaultConfig {
        minSdkVersion 14
        targetSdkVersion 23
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    lintOptions {
        abortOnError false
    }
    sourceSets {
        main {
            jniLibs.srcDirs = ['libs']
        }
    }
}

// In this section you declare where to find the dependencies of your project
repositories {
    jcenter()
    maven { url "https://jitpack.io" }
}

// In this section you declare the dependencies for your production and test code
dependencies {
    // SaltyRTC
    compile('com.github.saltyrtc:saltyrtc-client-java:c3f0b72') {
        exclude group: 'org.json'
    }

    // The production code uses the SLF4J logging API at compile time
    compile 'org.slf4j:slf4j-api:1.7.21'

    // WebRTC RTCPeerConnection
    compile files('libs/libjingle_peerconnection.jar')

    // Dependency: Msgpack serialization
    compile 'org.msgpack:msgpack-core:0.8.11'
    compile 'org.msgpack:jackson-dataformat-msgpack:0.8.11'

    // Dependency: Binary chunking
    compile 'org.saltyrtc.chunked-dc:chunked-dc:0.2.0'

    // Test dependencies
    testCompile 'org.slf4j:slf4j-simple:1.7.21'
    testCompile 'junit:junit:4.12'
    androidTestCompile 'junit:junit:4.12'
}

dependencyVerification {
    verify = [
            'org.slf4j:slf4j-api:1d5aeb6bd98b0fdd151269eae941c05f6468a791ea0f1e68d8e7fe518af3e7df',
            'org.msgpack:msgpack-core:2a92184bb2d470656a7388c204221ce2e6dd28cd0cac8dae700656a06699e8bb',
            'org.msgpack:jackson-dataformat-msgpack:ea532e53a01fef5f8b0c3d86a18124433baa69bdee5ccd5d9616ed5cb3237d37',
            'com.fasterxml.jackson.core:jackson-databind:215022eed86bde62e8ff5e9b04297a6a7a896df89c80576aa2291e5e1142a94b',
            'com.fasterxml.jackson.core:jackson-annotations:f775d20b6ad1ef122f453b2d7aeebb009523f7cdf89a674fe2f303221c95696b',
            'com.fasterxml.jackson.core:jackson-core:526ab629da103bf2c93e72bd541d7c34e498182460c56d5f48b03dbac91b1df9',
            'org.saltyrtc.chunked-dc:chunked-dc:e32ae9c0df9b2b3e5b3d2c8699c966b1d0fad89f76d2cab4be60268567415631',
    ]
}
